
function [log2] = importfile(filename, dataLines)

%IMPORTFILE Import data from a text file
%  LOG2 = IMPORTFILE(FILENAME) reads data from text file FILENAME for
%  the default selection.  Returns the data as a cell array.
%
%  LOG2 = IMPORTFILE(FILE, DATALINES) reads data for the specified row
%  interval(s) of text file FILENAME. Specify DATALINES as a positive
%  scalar integer or a N-by-2 array of positive scalar integers for
%  dis-contiguous row intervals.
%
%  Example:
%  log2 = importfile("C:\Users\Trisha\Desktop\CMAP-DATA-BEB\N10\log2.txt", [8, 1719]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 23-Sep-2020 13:14:35

%% Input handling



% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [8, Inf];
end

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 4);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = " ";

% Specify column names and types
opts.VariableNames = ["build", "finished", "successfully", "s"];
opts.VariableTypes = ["char", "double", "char", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
opts.LeadingDelimitersRule = "ignore";

% Specify variable properties
opts = setvaropts(opts, ["build", "successfully"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["build", "successfully"], "EmptyFieldRule", "auto");

% Import the data
log2 = readtable(filename, opts);

%% Convert to output type
log2 = table2cell(log2);
numIdx = cellfun(@(x) ~isnan(str2double(x)), log2);
log2(numIdx) = cellfun(@(x) {str2double(x)}, log2(numIdx));
end
